[package]
name = "tests"
version = "0.1.0"
edition = "2021"
license.workspace = true

[lints]
workspace = true

[lib]
doctest = false

[dependencies]
aws-config = { version = "1.5", features = [
    "behavior-version-latest",
], optional = true }
aws-credential-types = "1.2"
aws-sdk-sqs = { version = "1.39", optional = true }
aws-types = "1.3"
json-patch = "4.0"
jsonptr = "0.7"
k8s-openapi.workspace = true
kube.workspace = true
reqwest.workspace = true
regex.workspace = true
tokio = { workspace = true, features = [
    "rt",
    "rt-multi-thread",
    "net",
    "macros",
    "process",
] }
serde_json.workspace = true
mirrord = { artifact = "bin", path = "../mirrord/cli" }
mirrord-operator = { path = "../mirrord/operator", features = ["setup", "crd"] }
mirrord-tls-util = { path = "../mirrord/tls-util", optional = true }
serde.workspace = true
futures.workspace = true
rand.workspace = true
bytes.workspace = true
fancy-regex.workspace = true
hyper.workspace = true
hyper-util.workspace = true
http-body-util.workspace = true
pem = { workspace = true, optional = true }
rcgen = { workspace = true, optional = true }
rustls.workspace = true
rstest.workspace = true
mirrord-kube = { path = "../mirrord/kube" }

futures-util = "0.3"
wsl = "0.1"
chrono.workspace = true
tempfile.workspace = true
tokio-tungstenite.workspace = true

[target.'cfg(unix)'.dependencies]
mirrord-agent-env = { path = "../mirrord/agent/env", optional = true }

[features]
default = ["ephemeral", "job", "cli", "targetless"]
ephemeral = []
job = []
operator = [
    "dep:aws-config",
    "dep:aws-sdk-sqs",
    "dep:rcgen",
    "dep:mirrord-agent-env",
    "dep:pem",
    "dep:mirrord-tls-util",
]
cli = []
targetless = []
