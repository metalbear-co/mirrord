{"timestamp":"2025-02-28T13:15:41.663538Z","level":"INFO","fields":{"message":"Starting mirrord-intproxy","config":"LayerConfig { accept_invalid_certificates: None, skip_processes: None, skip_build_tools: true, connect_tcp: None, operator: None, kubeconfig: None, sip_binaries: None, target: TargetConfig { path: Some(Pod(PodTarget { pod: \"py-serv-deployment-6b77f7856f-ph5d6\", container: None })), namespace: None }, agent: AgentConfig { log_level: \"info\", json_log: false, namespace: None, image: AgentImageConfig(\"ghcr.io/metalbear-co/mirrord:3.134.0\"), image_pull_policy: \"IfNotPresent\", image_pull_secrets: None, ttl: 1, ephemeral: false, communication_timeout: None, startup_timeout: 60, network_interface: None, flush_connections: true, disabled_capabilities: None, tolerations: None, resources: None, check_out_of_pods: true, privileged: false, nftables: false, dns: AgentDnsConfig { timeout: None, attempts: None }, labels: None, annotations: None, node_selector: None, service_account: None, metrics: None, test_error: false }, container: ContainerConfig { cli_image: \"ghcr.io/metalbear-co/mirrord-cli:3.134.0\", cli_extra_args: [], cli_prevent_cleanup: false, cli_image_lib_path: \"/opt/mirrord/lib/libmirrord_layer.so\" }, feature: FeatureConfig { env: EnvConfig { include: None, exclude: Some(Single(\"*\")), override: None, load_from_process: None, unset: None, env_file: None, mapping: None }, fs: FsConfig { mode: Local, read_write: None, read_only: None, local: None, not_found: None, mapping: None }, network: NetworkConfig { incoming: IncomingConfig { port_mapping: {}, ignore_localhost: false, ignore_ports: {}, mode: Steal, http_filter: HttpFilterConfig { header_filter: Some(\"x-user: me\"), path_filter: None, all_of: None, any_of: None, ports: PortList(Multiple([80, 8080])) }, listen_ports: {}, on_concurrent_steal: Abort, ports: None, https_delivery: LocalHttpsDelivery { protocol: Tls, trust_roots: None, server_name: None, server_cert: None } }, outgoing: OutgoingConfig { tcp: false, udp: false, ignore_localhost: false, filter: None, unix_streams: None }, dns: DnsConfig { enabled: false, filter: None }, ipv6: false }, copy_target: CopyTargetConfig { enabled: false, scale_down: false }, hostname: true, split_queues: SplitQueuesConfig({}) }, telemetry: true, kube_context: None, internal_proxy: InternalProxyConfig { connect_tcp: None, client_tls_certificate: None, client_tls_key: None, start_idle_timeout: 60, idle_timeout: 5, socket_timeout: 31536000, log_level: Some(\"mirrord=trace\"), log_destination: Some(\"/home/razz4780/MetalBear/mirrord/intproxy.log\"), container_mode: false }, external_proxy: ExternalProxyConfig { tls_enable: true, tls_certificate: None, tls_key: None, start_idle_timeout: 60, idle_timeout: 5, log_level: None, log_destination: None }, use_proxy: true, experimental: ExperimentalConfig { tcp_ping4_mock: true, readlink: false, trust_any_certificate: false, enable_exec_hooks_linux: true, hide_ipv6_interfaces: false, disable_reuseaddr: false, use_dev_null: true, readonly_file_buffer: 128000, idle_local_http_connection_timeout: 3000 } }","listen_port":0,"version":"3.134.0"},"target":"mirrord::internal_proxy","filename":"mirrord/cli/src/internal_proxy.rs","line_number":55,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.666011Z","level":"TRACE","fields":{"message":"port-forward to pod AgentKubernetesConnectInfo { pod_name: \"mirrord-agent-1sz7br2oww-t2djq\", pod_namespace: \"default\", agent_port: 50632 }"},"target":"mirrord_kube::api::kubernetes::portforwarder","filename":"mirrord/kube/src/api/kubernetes/portforwarder.rs","line_number":92,"span":{"connect_info":"Some(DirectKubernetes(AgentKubernetesConnectInfo { pod_name: \"mirrord-agent-1sz7br2oww-t2djq\", pod_namespace: \"default\", agent_port: 50632 }))","name":"new"},"spans":[{"name":"proxy"},{"connect_info":"Some(DirectKubernetes(AgentKubernetesConnectInfo { pod_name: \"mirrord-agent-1sz7br2oww-t2djq\", pod_namespace: \"default\", agent_port: 50632 }))","name":"connect_and_ping"},{"connect_info":"Some(DirectKubernetes(AgentKubernetesConnectInfo { pod_name: \"mirrord-agent-1sz7br2oww-t2djq\", pod_namespace: \"default\", agent_port: 50632 }))","name":"new"}]}
{"timestamp":"2025-02-28T13:15:41.682049Z","level":"INFO","fields":{"return":"AgentConnection { reconnect: Break }"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":142,"span":{"connect_info":"Some(DirectKubernetes(AgentKubernetesConnectInfo { pod_name: \"mirrord-agent-1sz7br2oww-t2djq\", pod_namespace: \"default\", agent_port: 50632 }))","name":"new"},"spans":[{"name":"proxy"},{"connect_info":"Some(DirectKubernetes(AgentKubernetesConnectInfo { pod_name: \"mirrord-agent-1sz7br2oww-t2djq\", pod_namespace: \"default\", agent_port: 50632 }))","name":"connect_and_ping"},{"connect_info":"Some(DirectKubernetes(AgentKubernetesConnectInfo { pod_name: \"mirrord-agent-1sz7br2oww-t2djq\", pod_namespace: \"default\", agent_port: 50632 }))","name":"new"}]}
{"timestamp":"2025-02-28T13:15:41.684481Z","level":"TRACE","fields":{"return":"Ok(PollEvented { io: Some(TcpListener { addr: 127.0.0.1:39935, fd: 11 }) })"},"target":"mirrord::util","filename":"mirrord/cli/src/util.rs","line_number":52,"span":{"addr":"127.0.0.1:0","name":"create_listen_socket"},"spans":[{"name":"proxy"},{"addr":"127.0.0.1:0","name":"create_listen_socket"}]}
{"timestamp":"2025-02-28T13:15:41.684852Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"SwitchProtocolVersion(Version { major: 1, minor: 19, patch: 0 })","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"SwitchProtocolVersion(Version { major: 1, minor: 19, patch: 0 })","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:41.685278Z","level":"DEBUG","fields":{"message":"Sending ping to the agent"},"target":"mirrord_intproxy::ping_pong","filename":"mirrord/intproxy/src/ping_pong.rs","line_number":85,"span":{"name":"ping_pong_main_loop"},"spans":[{"name":"ping_pong_main_loop"}]}
{"timestamp":"2025-02-28T13:15:41.685361Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"PING_PONG","task_update":"Message(ToAgent(Ping))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.685466Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"Ping","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"Ping","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:41.686102Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(SwitchProtocolVersionResponse(Version { major: 1, minor: 19, patch: 0 })))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.686236Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"ReadyForLogs","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"ReadyForLogs","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:41.686426Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentProtocolVersion(Version { major: 1, minor: 19, patch: 0 })","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentProtocolVersion(Version { major: 1, minor: 19, patch: 0 })","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:41.686827Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(Pong))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.686910Z","level":"DEBUG","fields":{"message":"Agent responded to ping"},"target":"mirrord_intproxy::ping_pong","filename":"mirrord/intproxy/src/ping_pong.rs","line_number":97,"span":{"name":"ping_pong_main_loop"},"spans":[{"name":"ping_pong_main_loop"}]}
{"timestamp":"2025-02-28T13:15:41.700770Z","level":"INFO","fields":{"message":"New session","process_info":"ProcessInfo { pid: 1145049, name: \"python3.12\", cmdline: [\"python3\", \"-u\", \"tests/python-e2e/app_flask.py\"], loaded: true }"},"target":"mirrord_intproxy::layer_initializer","filename":"mirrord/intproxy/src/layer_initializer.rs","line_number":64,"span":{"layer_address":"127.0.0.1:45376","self":"LayerInitializer { listener: PollEvented { io: Some(TcpListener { addr: 127.0.0.1:39935, fd: 11 }) }, next_layer_id: LayerId(0) }","name":"handle_new_stream"},"spans":[{"name":"layer_initializer_main_loop"},{"layer_address":"127.0.0.1:45376","self":"LayerInitializer { listener: PollEvented { io: Some(TcpListener { addr: 127.0.0.1:39935, fd: 11 }) }, next_layer_id: LayerId(0) }","name":"handle_new_stream"}]}
{"timestamp":"2025-02-28T13:15:41.701029Z","level":"INFO","fields":{"return":"NewLayer { stream: PollEvented { io: Some(TcpStream { addr: 127.0.0.1:39935, peer: 127.0.0.1:45376, fd: 12 }) }, id: LayerId(0), parent_id: None }"},"target":"mirrord_intproxy::layer_initializer","filename":"mirrord/intproxy/src/layer_initializer.rs","line_number":46,"span":{"layer_address":"127.0.0.1:45376","self":"LayerInitializer { listener: PollEvented { io: Some(TcpListener { addr: 127.0.0.1:39935, fd: 11 }) }, next_layer_id: LayerId(0) }","name":"handle_new_stream"},"spans":[{"name":"layer_initializer_main_loop"},{"layer_address":"127.0.0.1:45376","self":"LayerInitializer { listener: PollEvented { io: Some(TcpListener { addr: 127.0.0.1:39935, fd: 11 }) }, next_layer_id: LayerId(0) }","name":"handle_new_stream"}]}
{"timestamp":"2025-02-28T13:15:41.701335Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_INITIALIZER","task_update":"Message(NewLayer(NewLayer { stream: PollEvented { io: Some(TcpStream { addr: 127.0.0.1:39935, peer: 127.0.0.1:45376, fd: 12 }) }, id: LayerId(0), parent_id: None }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.784837Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 1, layer_id: LayerId(0), message: File(Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.785041Z","level":"TRACE","fields":{"return":"Some(Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } }))"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":252,"span":{"layer_id":"LayerId(0)","message_id":"1","request":"Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } })","self":"RouterFileOps { highest_user_facing_fd: None, current_fd_offset: 0 }","name":"map_request"},"spans":[{"name":"files_proxy_main_loop"},{"layer_id":"LayerId(0)","message_id":"1","request":"Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } })","self":"RouterFileOps { highest_user_facing_fd: None, current_fd_offset: 0 }","name":"map_request"}]}
{"timestamp":"2025-02-28T13:15:41.785242Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":516,"span":{"request":"Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } })","name":"is_request_supported"},"spans":[{"name":"files_proxy_main_loop"},{"layer_id":"LayerId(0)","message_id":"1","request":"Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } })","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 0, front: None, back: None }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: None, current_fd_offset: 0 } }","name":"file_request"},{"request":"Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } })","name":"is_request_supported"}]}
{"timestamp":"2025-02-28T13:15:41.785353Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":547,"span":{"layer_id":"LayerId(0)","message_id":"1","request":"Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } })","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 0, front: None, back: None }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: None, current_fd_offset: 0 } }","name":"file_request"},"spans":[{"name":"files_proxy_main_loop"},{"layer_id":"LayerId(0)","message_id":"1","request":"Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } })","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 0, front: None, back: None }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: None, current_fd_offset: 0 } }","name":"file_request"}]}
{"timestamp":"2025-02-28T13:15:41.785468Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"FILES_PROXY","task_update":"Message(ToAgent(FileRequest(Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.785572Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"FileRequest(Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } }))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"FileRequest(Open(OpenFileRequest { path: \"/etc/hostname\", open_options: OpenOptionsInternal { read: true, write: false, append: false, truncate: false, create: false, create_new: false } }))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:41.787358Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(File(Open(Ok(OpenFileResponse { fd: 0 })))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.787516Z","level":"TRACE","fields":{"return":"Open(Ok(OpenFileResponse { fd: 0 }))"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":332,"span":{"response":"Open(Ok(OpenFileResponse { fd: 0 }))","self":"RouterFileOps { highest_user_facing_fd: None, current_fd_offset: 0 }","name":"map_response"},"spans":[{"name":"files_proxy_main_loop"},{"response":"Open(Ok(OpenFileResponse { fd: 0 }))","self":"RouterFileOps { highest_user_facing_fd: None, current_fd_offset: 0 }","name":"map_response"}]}
{"timestamp":"2025-02-28T13:15:41.787603Z","level":"TRACE","fields":{"return":"Some((1, LayerId(0), OpenBuffered))"},"target":"mirrord_intproxy::request_queue","filename":"mirrord/intproxy/src/request_queue.rs","line_number":68,"span":{"self":"RequestQueue { queue_len: 1, front: Some((1, LayerId(0), OpenBuffered)), back: Some((1, LayerId(0), OpenBuffered)) }","name":"pop_front_with_data"},"spans":[{"name":"files_proxy_main_loop"},{"response":"Open(Ok(OpenFileResponse { fd: 0 }))","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 1, front: Some((1, LayerId(0), OpenBuffered)), back: Some((1, LayerId(0), OpenBuffered)) }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_response"},{"self":"RequestQueue { queue_len: 1, front: Some((1, LayerId(0), OpenBuffered)), back: Some((1, LayerId(0), OpenBuffered)) }","name":"pop_front_with_data"}]}
{"timestamp":"2025-02-28T13:15:41.787657Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":837,"span":{"response":"Open(Ok(OpenFileResponse { fd: 0 }))","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 1, front: Some((1, LayerId(0), OpenBuffered)), back: Some((1, LayerId(0), OpenBuffered)) }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_response"},"spans":[{"name":"files_proxy_main_loop"},{"response":"Open(Ok(OpenFileResponse { fd: 0 }))","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 1, front: Some((1, LayerId(0), OpenBuffered)), back: Some((1, LayerId(0), OpenBuffered)) }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_response"}]}
{"timestamp":"2025-02-28T13:15:41.787700Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"FILES_PROXY","task_update":"Message(ToLayer(ToLayer { message_id: 1, layer_id: LayerId(0), message: File(Open(Ok(OpenFileResponse { fd: 0 }))) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.787773Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":39,"span":{"msg":"LocalMessage { message_id: 1, inner: File(Open(Ok(OpenFileResponse { fd: 0 }))) }","name":"send_and_flush"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},{"msg":"LocalMessage { message_id: 1, inner: File(Open(Ok(OpenFileResponse { fd: 0 }))) }","name":"send_and_flush"}]}
{"timestamp":"2025-02-28T13:15:41.787920Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 2, layer_id: LayerId(0), message: File(Read(ReadFileRequest { remote_fd: 0, buffer_size: 256 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.787973Z","level":"TRACE","fields":{"return":"Some(Read(ReadFileRequest { remote_fd: 0, buffer_size: 256 }))"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":252,"span":{"layer_id":"LayerId(0)","message_id":"2","request":"Read(ReadFileRequest { remote_fd: 0, buffer_size: 256 })","self":"RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 }","name":"map_request"},"spans":[{"name":"files_proxy_main_loop"},{"layer_id":"LayerId(0)","message_id":"2","request":"Read(ReadFileRequest { remote_fd: 0, buffer_size: 256 })","self":"RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 }","name":"map_request"}]}
{"timestamp":"2025-02-28T13:15:41.788022Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":516,"span":{"request":"Read(ReadFileRequest { remote_fd: 0, buffer_size: 256 })","name":"is_request_supported"},"spans":[{"name":"files_proxy_main_loop"},{"layer_id":"LayerId(0)","message_id":"2","request":"Read(ReadFileRequest { remote_fd: 0, buffer_size: 256 })","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {0: BufferedFileData { buffer_position: 0, buffer_len: 0, fd_position: 0 }}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 0, front: None, back: None }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_request"},{"request":"Read(ReadFileRequest { remote_fd: 0, buffer_size: 256 })","name":"is_request_supported"}]}
{"timestamp":"2025-02-28T13:15:41.788064Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":547,"span":{"layer_id":"LayerId(0)","message_id":"2","request":"Read(ReadFileRequest { remote_fd: 0, buffer_size: 256 })","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {0: BufferedFileData { buffer_position: 0, buffer_len: 0, fd_position: 0 }}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 0, front: None, back: None }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_request"},"spans":[{"name":"files_proxy_main_loop"},{"layer_id":"LayerId(0)","message_id":"2","request":"Read(ReadFileRequest { remote_fd: 0, buffer_size: 256 })","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {0: BufferedFileData { buffer_position: 0, buffer_len: 0, fd_position: 0 }}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 0, front: None, back: None }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_request"}]}
{"timestamp":"2025-02-28T13:15:41.788105Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"FILES_PROXY","task_update":"Message(ToAgent(FileRequest(ReadLimited(ReadLimitedFileRequest { remote_fd: 0, buffer_size: 128000, start_from: 0 }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.788142Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"FileRequest(ReadLimited(ReadLimitedFileRequest { remote_fd: 0, buffer_size: 128000, start_from: 0 }))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"FileRequest(ReadLimited(ReadLimitedFileRequest { remote_fd: 0, buffer_size: 128000, start_from: 0 }))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:41.789294Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(File(ReadLimited(Ok(ReadFileResponse { bytes (length): 36, read_amount: 36 })))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.789353Z","level":"TRACE","fields":{"return":"ReadLimited(Ok(ReadFileResponse { bytes (length): 36, read_amount: 36 }))"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":332,"span":{"response":"ReadLimited(Ok(ReadFileResponse { bytes (length): 36, read_amount: 36 }))","self":"RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 }","name":"map_response"},"spans":[{"name":"files_proxy_main_loop"},{"response":"ReadLimited(Ok(ReadFileResponse { bytes (length): 36, read_amount: 36 }))","self":"RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 }","name":"map_response"}]}
{"timestamp":"2025-02-28T13:15:41.789572Z","level":"TRACE","fields":{"return":"Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true }))"},"target":"mirrord_intproxy::request_queue","filename":"mirrord/intproxy/src/request_queue.rs","line_number":68,"span":{"self":"RequestQueue { queue_len: 1, front: Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true })), back: Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true })) }","name":"pop_front_with_data"},"spans":[{"name":"files_proxy_main_loop"},{"response":"ReadLimited(Ok(ReadFileResponse { bytes (length): 36, read_amount: 36 }))","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {0: BufferedFileData { buffer_position: 0, buffer_len: 0, fd_position: 0 }}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 1, front: Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true })), back: Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true })) }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_response"},{"self":"RequestQueue { queue_len: 1, front: Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true })), back: Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true })) }","name":"pop_front_with_data"}]}
{"timestamp":"2025-02-28T13:15:41.789656Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":837,"span":{"response":"ReadLimited(Ok(ReadFileResponse { bytes (length): 36, read_amount: 36 }))","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {0: BufferedFileData { buffer_position: 0, buffer_len: 0, fd_position: 0 }}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 1, front: Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true })), back: Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true })) }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_response"},"spans":[{"name":"files_proxy_main_loop"},{"response":"ReadLimited(Ok(ReadFileResponse { bytes (length): 36, read_amount: 36 }))","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {0: BufferedFileData { buffer_position: 0, buffer_len: 0, fd_position: 0 }}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 1, front: Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true })), back: Some((2, LayerId(0), ReadBuffered { fd: 0, requested_amount: 256, update_fd_position: true })) }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_response"}]}
{"timestamp":"2025-02-28T13:15:41.789732Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"FILES_PROXY","task_update":"Message(ToLayer(ToLayer { message_id: 2, layer_id: LayerId(0), message: File(Read(Ok(ReadFileResponse { bytes (length): 36, read_amount: 36 }))) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.789806Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":39,"span":{"msg":"LocalMessage { message_id: 2, inner: File(Read(Ok(ReadFileResponse { bytes (length): 36, read_amount: 36 }))) }","name":"send_and_flush"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},{"msg":"LocalMessage { message_id: 2, inner: File(Read(Ok(ReadFileResponse { bytes (length): 36, read_amount: 36 }))) }","name":"send_and_flush"}]}
{"timestamp":"2025-02-28T13:15:41.789860Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 3, layer_id: LayerId(0), message: File(Close(CloseFileRequest { fd: 0 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.789901Z","level":"TRACE","fields":{"return":"Some(Close(CloseFileRequest { fd: 0 }))"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":252,"span":{"layer_id":"LayerId(0)","message_id":"3","request":"Close(CloseFileRequest { fd: 0 })","self":"RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 }","name":"map_request"},"spans":[{"name":"files_proxy_main_loop"},{"layer_id":"LayerId(0)","message_id":"3","request":"Close(CloseFileRequest { fd: 0 })","self":"RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 }","name":"map_request"}]}
{"timestamp":"2025-02-28T13:15:41.789949Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":516,"span":{"request":"Close(CloseFileRequest { fd: 0 })","name":"is_request_supported"},"spans":[{"name":"files_proxy_main_loop"},{"layer_id":"LayerId(0)","message_id":"3","request":"Close(CloseFileRequest { fd: 0 })","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {0: BufferedFileData { buffer_position: 0, buffer_len: 36, fd_position: 36 }}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 0, front: None, back: None }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_request"},{"request":"Close(CloseFileRequest { fd: 0 })","name":"is_request_supported"}]}
{"timestamp":"2025-02-28T13:15:41.789987Z","level":"TRACE","fields":{"return":"true"},"target":"mirrord_intproxy::remote_resources","filename":"mirrord/intproxy/src/remote_resources.rs","line_number":34,"span":{"layer_id":"LayerId(0)","name":"remove"},"spans":[{"name":"files_proxy_main_loop"},{"layer_id":"LayerId(0)","message_id":"3","request":"Close(CloseFileRequest { fd: 0 })","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {0: BufferedFileData { buffer_position: 0, buffer_len: 36, fd_position: 36 }}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 0, front: None, back: None }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_request"},{"layer_id":"LayerId(0)","name":"remove"}]}
{"timestamp":"2025-02-28T13:15:41.790018Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":547,"span":{"layer_id":"LayerId(0)","message_id":"3","request":"Close(CloseFileRequest { fd: 0 })","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {0: BufferedFileData { buffer_position: 0, buffer_len: 36, fd_position: 36 }}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 0, front: None, back: None }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_request"},"spans":[{"name":"files_proxy_main_loop"},{"layer_id":"LayerId(0)","message_id":"3","request":"Close(CloseFileRequest { fd: 0 })","self":"FilesProxy { file_buffer_size: 128000, buffer_readdir: true, buffered_files: {0: BufferedFileData { buffer_position: 0, buffer_len: 36, fd_position: 36 }}, buffered_dirs: {}, protocol_version: Some(Version { major: 1, minor: 19, patch: 0 }), request_queue: RequestQueue { queue_len: 0, front: None, back: None }, reconnect_tracker: RouterFileOps { highest_user_facing_fd: Some(0), current_fd_offset: 0 } }","name":"file_request"}]}
{"timestamp":"2025-02-28T13:15:41.790060Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"FILES_PROXY","task_update":"Message(ToAgent(FileRequest(Close(CloseFileRequest { fd: 0 }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.790093Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"FileRequest(Close(CloseFileRequest { fd: 0 }))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"FileRequest(Close(CloseFileRequest { fd: 0 }))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:41.830659Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 4, layer_id: LayerId(0), message: Incoming(PortSubscribe(PortSubscribe { listening_on: 0.0.0.0:46635, subscription: Steal(FilteredHttpEx(80, Header(Filter(\"x-user: me\")))) })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.830897Z","level":"INFO","fields":{"return":"Some(ToAgent(TcpSteal(PortSubscribe(FilteredHttpEx(80, Header(Filter(\"x-user: me\")))))))"},"target":"mirrord_intproxy::proxies::incoming::subscriptions","filename":"mirrord/intproxy/src/proxies/incoming/subscriptions.rs","line_number":183,"span":{"layer_id":"LayerId(0)","message_id":"4","request":"PortSubscribe { listening_on: 0.0.0.0:46635, subscription: Steal(FilteredHttpEx(80, Header(Filter(\"x-user: me\")))) }","name":"layer_subscribed"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(4, LayerId(0), PortSubscribe(PortSubscribe { listening_on: 0.0.0.0:46635, subscription: Steal(FilteredHttpEx(80, Header(Filter(\"x-user: me\")))) }))","name":"handle_message"},{"layer_id":"LayerId(0)","message_id":"4","request":"PortSubscribe { listening_on: 0.0.0.0:46635, subscription: Steal(FilteredHttpEx(80, Header(Filter(\"x-user: me\")))) }","name":"layer_subscribed"}]}
{"timestamp":"2025-02-28T13:15:41.830971Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"LayerRequest(4, LayerId(0), PortSubscribe(PortSubscribe { listening_on: 0.0.0.0:46635, subscription: Steal(FilteredHttpEx(80, Header(Filter(\"x-user: me\")))) }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(4, LayerId(0), PortSubscribe(PortSubscribe { listening_on: 0.0.0.0:46635, subscription: Steal(FilteredHttpEx(80, Header(Filter(\"x-user: me\")))) }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:41.831039Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToAgent(TcpSteal(PortSubscribe(FilteredHttpEx(80, Header(Filter(\"x-user: me\")))))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:41.831097Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"TcpSteal(PortSubscribe(FilteredHttpEx(80, Header(Filter(\"x-user: me\")))))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"TcpSteal(PortSubscribe(FilteredHttpEx(80, Header(Filter(\"x-user: me\")))))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:42.111491Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(SubscribeResult(Ok(80)))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:42.111839Z","level":"TRACE","fields":{"return":"Ok([ToLayer { message_id: 4, layer_id: LayerId(0), message: Incoming(PortSubscribe(Ok(()))) }])"},"target":"mirrord_intproxy::proxies::incoming::subscriptions","filename":"mirrord/intproxy/src/proxies/incoming/subscriptions.rs","line_number":240,"span":{"result":"Ok(80)","name":"agent_responded"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(SubscribeResult(Ok(80)))","name":"handle_message"},{"result":"Ok(80)","name":"agent_responded"}]}
{"timestamp":"2025-02-28T13:15:42.111981Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(SubscribeResult(Ok(80)))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(SubscribeResult(Ok(80)))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:42.112100Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToLayer(ToLayer { message_id: 4, layer_id: LayerId(0), message: Incoming(PortSubscribe(Ok(()))) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:42.112310Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":39,"span":{"msg":"LocalMessage { message_id: 4, inner: Incoming(PortSubscribe(Ok(()))) }","name":"send_and_flush"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},{"msg":"LocalMessage { message_id: 4, inner: Incoming(PortSubscribe(Ok(()))) }","name":"send_and_flush"}]}
{"timestamp":"2025-02-28T13:15:45.253834Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 0, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:54382, destination: 127.0.0.1:80 }, transport: Tcp })))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.254191Z","level":"INFO","fields":{"message":"Received an HTTP request from the agent","full_headers":"{\"host\": \"127.0.0.1:33621\", \"user-agent\": \"curl/8.5.0\", \"accept\": \"*/*\", \"x-user\": \"me\"}","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":199,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 0, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:54382, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:45.254433Z","level":"DEBUG","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":187,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 0, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:54382, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:45.254537Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 0, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:54382, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 0, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:54382, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:45.254670Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":1},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:45.255141Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59466, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":192,"span":{"name":"make_client"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"make_client"}]}
{"timestamp":"2025-02-28T13:15:45.255280Z","level":"DEBUG","fields":{"message":"Made a new client","client":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59466, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":141,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:45.255362Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59466, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:45.255777Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 5, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59466 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.255940Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"LayerRequest(5, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59466 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(5, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59466 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:45.256043Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToLayer(ToLayer { message_id: 5, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59466, local_address: 0.0.0.0 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.256193Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":39,"span":{"msg":"LocalMessage { message_id: 5, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59466, local_address: 0.0.0.0 })) }","name":"send_and_flush"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},{"msg":"LocalMessage { message_id: 5, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59466, local_address: 0.0.0.0 })) }","name":"send_and_flush"}]}
{"timestamp":"2025-02-28T13:15:45.258227Z","level":"TRACE","fields":{"message":"HTTP connection with the local application finished"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":235}
{"timestamp":"2025-02-28T13:15:45.258400Z","level":"TRACE","fields":{"return":"Response { status: 200, version: HTTP/1.1, headers: {\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:45 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}, body: Body(Streaming) }"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59466, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59466, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:45.258627Z","level":"DEBUG","fields":{"message":"All response body frames were instantly ready, sending full response","ready_frames":"[Data(3 (length))]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":104,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:45.258722Z","level":"DEBUG","fields":{"return":"Continue(())"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":85,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:45.258832Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":317,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 0, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:45.258990Z","level":"INFO","fields":{"message":"Received an HTTP response from an HttpGatewayTask","full_headers":"{\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:45 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}","response":"HttpResponse { port: 80, connection_id: 0, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":785,"span":{"id":"HttpGatewayId { connection_id: 0, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 0, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 0, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 0, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:45.259096Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 0, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 0, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 0, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 0, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:45.259236Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 0, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 0, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:45.259395Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToAgent(TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 0, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.259525Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 0, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 0, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:45.262716Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(Close(TcpClose { connection_id: 0 }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.262888Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(Close(TcpClose { connection_id: 0 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(Close(TcpClose { connection_id: 0 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:45.585129Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 1, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:19915, destination: 127.0.0.1:80 }, transport: Tcp })))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.585541Z","level":"INFO","fields":{"message":"Received an HTTP request from the agent","full_headers":"{\"host\": \"127.0.0.1:33621\", \"user-agent\": \"curl/8.5.0\", \"accept\": \"*/*\", \"x-user\": \"me\"}","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":199,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 1, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:19915, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:45.585801Z","level":"DEBUG","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":187,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 1, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:19915, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:45.585912Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 1, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:19915, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 1, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:19915, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:45.586051Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":1},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:45.586183Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59466, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":162,"span":{"name":"wait_for_ready"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"wait_for_ready"}]}
{"timestamp":"2025-02-28T13:15:45.586279Z","level":"DEBUG","fields":{"message":"Reused an idle client","ready":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59466, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":127,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:45.586383Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59466, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:45.586543Z","level":"TRACE","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59466, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59466, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:45.586666Z","level":"WARN","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":215,"span":{"name":"send_attempt"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"}]}
{"timestamp":"2025-02-28T13:15:45.586738Z","level":"TRACE","fields":{"message":"Trying again after backoff","backoff_ms":"50","failed_attempts":1,"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":351,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:45.638319Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":2},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:45.638905Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59482, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":192,"span":{"name":"make_client"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"make_client"}]}
{"timestamp":"2025-02-28T13:15:45.639066Z","level":"DEBUG","fields":{"message":"Made a new client","client":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59482, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":141,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:45.639167Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59482, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:45.639731Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 6, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59482 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.639962Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"LayerRequest(6, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59482 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(6, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59482 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:45.640089Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToLayer(ToLayer { message_id: 6, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59482, local_address: 0.0.0.0 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.640265Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":39,"span":{"msg":"LocalMessage { message_id: 6, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59482, local_address: 0.0.0.0 })) }","name":"send_and_flush"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},{"msg":"LocalMessage { message_id: 6, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59482, local_address: 0.0.0.0 })) }","name":"send_and_flush"}]}
{"timestamp":"2025-02-28T13:15:45.642262Z","level":"TRACE","fields":{"message":"HTTP connection with the local application finished"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":235}
{"timestamp":"2025-02-28T13:15:45.642403Z","level":"TRACE","fields":{"return":"Response { status: 200, version: HTTP/1.1, headers: {\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:45 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}, body: Body(Streaming) }"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59482, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59482, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:45.642646Z","level":"DEBUG","fields":{"message":"All response body frames were instantly ready, sending full response","ready_frames":"[Data(3 (length))]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":104,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:45.642737Z","level":"DEBUG","fields":{"return":"Continue(())"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":85,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:45.642844Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":317,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 1, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:45.643018Z","level":"INFO","fields":{"message":"Received an HTTP response from an HttpGatewayTask","full_headers":"{\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:45 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}","response":"HttpResponse { port: 80, connection_id: 1, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":785,"span":{"id":"HttpGatewayId { connection_id: 1, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 1, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 1, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 1, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:45.643133Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 1, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 1, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 1, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 1, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:45.643259Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 1, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 1, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:45.643403Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToAgent(TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 1, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.643552Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 1, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 1, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:45.646532Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(Close(TcpClose { connection_id: 1 }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.646700Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(Close(TcpClose { connection_id: 1 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(Close(TcpClose { connection_id: 1 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:45.872141Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 2, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:13457, destination: 127.0.0.1:80 }, transport: Tcp })))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.872524Z","level":"INFO","fields":{"message":"Received an HTTP request from the agent","full_headers":"{\"host\": \"127.0.0.1:33621\", \"user-agent\": \"curl/8.5.0\", \"accept\": \"*/*\", \"x-user\": \"me\"}","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":199,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 2, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:13457, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:45.872756Z","level":"DEBUG","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":187,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 2, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:13457, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:45.872872Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 2, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:13457, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 2, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:13457, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:45.873003Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":1},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:45.873116Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59482, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":162,"span":{"name":"wait_for_ready"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"wait_for_ready"}]}
{"timestamp":"2025-02-28T13:15:45.873205Z","level":"DEBUG","fields":{"message":"Reused an idle client","ready":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59482, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":127,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:45.873293Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59482, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:45.873451Z","level":"TRACE","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59482, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59482, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:45.873566Z","level":"WARN","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":215,"span":{"name":"send_attempt"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"}]}
{"timestamp":"2025-02-28T13:15:45.873630Z","level":"TRACE","fields":{"message":"Trying again after backoff","backoff_ms":"50","failed_attempts":1,"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":351,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:45.924129Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":2},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:45.924859Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59492, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":192,"span":{"name":"make_client"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"make_client"}]}
{"timestamp":"2025-02-28T13:15:45.925050Z","level":"DEBUG","fields":{"message":"Made a new client","client":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59492, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":141,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:45.925196Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59492, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:45.925851Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 7, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59492 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.926143Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"LayerRequest(7, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59492 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(7, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59492 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:45.926319Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToLayer(ToLayer { message_id: 7, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59492, local_address: 0.0.0.0 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.926568Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":39,"span":{"msg":"LocalMessage { message_id: 7, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59492, local_address: 0.0.0.0 })) }","name":"send_and_flush"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},{"msg":"LocalMessage { message_id: 7, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59492, local_address: 0.0.0.0 })) }","name":"send_and_flush"}]}
{"timestamp":"2025-02-28T13:15:45.928804Z","level":"TRACE","fields":{"message":"HTTP connection with the local application finished"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":235}
{"timestamp":"2025-02-28T13:15:45.928986Z","level":"TRACE","fields":{"return":"Response { status: 200, version: HTTP/1.1, headers: {\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:45 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}, body: Body(Streaming) }"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59492, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59492, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:45.929288Z","level":"DEBUG","fields":{"message":"All response body frames were instantly ready, sending full response","ready_frames":"[Data(3 (length))]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":104,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:45.929416Z","level":"DEBUG","fields":{"return":"Continue(())"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":85,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:45.929556Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":317,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 2, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:45.929758Z","level":"INFO","fields":{"message":"Received an HTTP response from an HttpGatewayTask","full_headers":"{\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:45 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}","response":"HttpResponse { port: 80, connection_id: 2, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":785,"span":{"id":"HttpGatewayId { connection_id: 2, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 2, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 2, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 2, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:45.929896Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 2, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 2, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 2, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 2, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:45.930053Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 2, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 2, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:45.930200Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToAgent(TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 2, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.930345Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 2, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 2, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:45.934134Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(Close(TcpClose { connection_id: 2 }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:45.934328Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(Close(TcpClose { connection_id: 2 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(Close(TcpClose { connection_id: 2 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:46.170966Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 3, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:40831, destination: 127.0.0.1:80 }, transport: Tcp })))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.171350Z","level":"INFO","fields":{"message":"Received an HTTP request from the agent","full_headers":"{\"host\": \"127.0.0.1:33621\", \"user-agent\": \"curl/8.5.0\", \"accept\": \"*/*\", \"x-user\": \"me\"}","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":199,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 3, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:40831, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:46.171601Z","level":"DEBUG","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":187,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 3, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:40831, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:46.171704Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 3, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:40831, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 3, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:40831, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:46.171839Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":1},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.171949Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59492, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":162,"span":{"name":"wait_for_ready"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"wait_for_ready"}]}
{"timestamp":"2025-02-28T13:15:46.172035Z","level":"DEBUG","fields":{"message":"Reused an idle client","ready":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59492, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":127,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.172116Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59492, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.172264Z","level":"TRACE","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59492, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59492, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:46.172378Z","level":"WARN","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":215,"span":{"name":"send_attempt"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"}]}
{"timestamp":"2025-02-28T13:15:46.172438Z","level":"TRACE","fields":{"message":"Trying again after backoff","backoff_ms":"50","failed_attempts":1,"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":351,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.223842Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":2},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.224539Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59496, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":192,"span":{"name":"make_client"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"make_client"}]}
{"timestamp":"2025-02-28T13:15:46.224731Z","level":"DEBUG","fields":{"message":"Made a new client","client":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59496, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":141,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.224858Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59496, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.225473Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 8, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59496 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.225732Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"LayerRequest(8, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59496 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(8, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59496 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:46.225882Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToLayer(ToLayer { message_id: 8, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59496, local_address: 0.0.0.0 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.226083Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":39,"span":{"msg":"LocalMessage { message_id: 8, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59496, local_address: 0.0.0.0 })) }","name":"send_and_flush"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},{"msg":"LocalMessage { message_id: 8, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59496, local_address: 0.0.0.0 })) }","name":"send_and_flush"}]}
{"timestamp":"2025-02-28T13:15:46.228520Z","level":"TRACE","fields":{"message":"HTTP connection with the local application finished"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":235}
{"timestamp":"2025-02-28T13:15:46.228652Z","level":"TRACE","fields":{"return":"Response { status: 200, version: HTTP/1.1, headers: {\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:46 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}, body: Body(Streaming) }"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59496, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59496, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:46.228896Z","level":"DEBUG","fields":{"message":"All response body frames were instantly ready, sending full response","ready_frames":"[Data(3 (length))]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":104,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:46.229005Z","level":"DEBUG","fields":{"return":"Continue(())"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":85,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:46.229126Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":317,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 3, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.229310Z","level":"INFO","fields":{"message":"Received an HTTP response from an HttpGatewayTask","full_headers":"{\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:46 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}","response":"HttpResponse { port: 80, connection_id: 3, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":785,"span":{"id":"HttpGatewayId { connection_id: 3, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 3, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 3, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 3, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:46.229459Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 3, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 3, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 3, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 3, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:46.229612Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 3, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 3, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:46.229766Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToAgent(TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 3, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.229918Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 3, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 3, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:46.233480Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(Close(TcpClose { connection_id: 3 }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.233660Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(Close(TcpClose { connection_id: 3 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(Close(TcpClose { connection_id: 3 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:46.489271Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 4, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:16038, destination: 127.0.0.1:80 }, transport: Tcp })))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.489616Z","level":"INFO","fields":{"message":"Received an HTTP request from the agent","full_headers":"{\"host\": \"127.0.0.1:33621\", \"user-agent\": \"curl/8.5.0\", \"accept\": \"*/*\", \"x-user\": \"me\"}","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":199,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 4, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:16038, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:46.489818Z","level":"DEBUG","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":187,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 4, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:16038, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:46.489911Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 4, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:16038, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 4, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:16038, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:46.490023Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":1},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.490128Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59496, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":162,"span":{"name":"wait_for_ready"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"wait_for_ready"}]}
{"timestamp":"2025-02-28T13:15:46.490208Z","level":"DEBUG","fields":{"message":"Reused an idle client","ready":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59496, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":127,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.490284Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59496, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.490430Z","level":"TRACE","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59496, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59496, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:46.490536Z","level":"WARN","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":215,"span":{"name":"send_attempt"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"}]}
{"timestamp":"2025-02-28T13:15:46.490592Z","level":"TRACE","fields":{"message":"Trying again after backoff","backoff_ms":"50","failed_attempts":1,"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":351,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.541022Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":2},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.541787Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59512, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":192,"span":{"name":"make_client"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"make_client"}]}
{"timestamp":"2025-02-28T13:15:46.541991Z","level":"DEBUG","fields":{"message":"Made a new client","client":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59512, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":141,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.542112Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59512, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.542670Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 9, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59512 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.542899Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"LayerRequest(9, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59512 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(9, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59512 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:46.543045Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToLayer(ToLayer { message_id: 9, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59512, local_address: 0.0.0.0 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.543257Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":39,"span":{"msg":"LocalMessage { message_id: 9, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59512, local_address: 0.0.0.0 })) }","name":"send_and_flush"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},{"msg":"LocalMessage { message_id: 9, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59512, local_address: 0.0.0.0 })) }","name":"send_and_flush"}]}
{"timestamp":"2025-02-28T13:15:46.545320Z","level":"TRACE","fields":{"message":"HTTP connection with the local application finished"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":235}
{"timestamp":"2025-02-28T13:15:46.545462Z","level":"TRACE","fields":{"return":"Response { status: 200, version: HTTP/1.1, headers: {\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:46 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}, body: Body(Streaming) }"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59512, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59512, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:46.545714Z","level":"DEBUG","fields":{"message":"All response body frames were instantly ready, sending full response","ready_frames":"[Data(3 (length))]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":104,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:46.545813Z","level":"DEBUG","fields":{"return":"Continue(())"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":85,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:46.545946Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":317,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 4, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.546121Z","level":"INFO","fields":{"message":"Received an HTTP response from an HttpGatewayTask","full_headers":"{\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:46 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}","response":"HttpResponse { port: 80, connection_id: 4, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":785,"span":{"id":"HttpGatewayId { connection_id: 4, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 4, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 4, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 4, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:46.546240Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 4, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 4, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 4, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 4, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:46.546403Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 4, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 4, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:46.546541Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToAgent(TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 4, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.546686Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 4, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 4, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:46.550483Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(Close(TcpClose { connection_id: 4 }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.550692Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(Close(TcpClose { connection_id: 4 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(Close(TcpClose { connection_id: 4 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:46.775863Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 5, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:43997, destination: 127.0.0.1:80 }, transport: Tcp })))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.776205Z","level":"INFO","fields":{"message":"Received an HTTP request from the agent","full_headers":"{\"host\": \"127.0.0.1:33621\", \"user-agent\": \"curl/8.5.0\", \"accept\": \"*/*\", \"x-user\": \"me\"}","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":199,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 5, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:43997, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:46.776438Z","level":"DEBUG","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":187,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 5, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:43997, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:46.776540Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 5, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:43997, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 5, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:43997, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:46.776658Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":1},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.776759Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59512, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":162,"span":{"name":"wait_for_ready"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"wait_for_ready"}]}
{"timestamp":"2025-02-28T13:15:46.776843Z","level":"DEBUG","fields":{"message":"Reused an idle client","ready":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59512, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":127,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.776918Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59512, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.777046Z","level":"TRACE","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59512, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59512, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:46.777145Z","level":"WARN","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":215,"span":{"name":"send_attempt"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"}]}
{"timestamp":"2025-02-28T13:15:46.777203Z","level":"TRACE","fields":{"message":"Trying again after backoff","backoff_ms":"50","failed_attempts":1,"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":351,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.828616Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":2},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.829328Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59528, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":192,"span":{"name":"make_client"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"make_client"}]}
{"timestamp":"2025-02-28T13:15:46.829543Z","level":"DEBUG","fields":{"message":"Made a new client","client":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59528, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":141,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.829687Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59528, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:46.830285Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 10, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59528 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.830528Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"LayerRequest(10, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59528 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(10, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59528 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:46.830680Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToLayer(ToLayer { message_id: 10, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59528, local_address: 0.0.0.0 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.830882Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":39,"span":{"msg":"LocalMessage { message_id: 10, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59528, local_address: 0.0.0.0 })) }","name":"send_and_flush"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},{"msg":"LocalMessage { message_id: 10, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59528, local_address: 0.0.0.0 })) }","name":"send_and_flush"}]}
{"timestamp":"2025-02-28T13:15:46.833195Z","level":"TRACE","fields":{"message":"HTTP connection with the local application finished"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":235}
{"timestamp":"2025-02-28T13:15:46.833322Z","level":"TRACE","fields":{"return":"Response { status: 200, version: HTTP/1.1, headers: {\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:46 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}, body: Body(Streaming) }"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59528, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59528, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:46.833594Z","level":"DEBUG","fields":{"message":"All response body frames were instantly ready, sending full response","ready_frames":"[Data(3 (length))]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":104,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:46.833693Z","level":"DEBUG","fields":{"return":"Continue(())"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":85,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:46.833809Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":317,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 5, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:46.833979Z","level":"INFO","fields":{"message":"Received an HTTP response from an HttpGatewayTask","full_headers":"{\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:46 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}","response":"HttpResponse { port: 80, connection_id: 5, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":785,"span":{"id":"HttpGatewayId { connection_id: 5, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 5, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 5, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 5, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:46.834105Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 5, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 5, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 5, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 5, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:46.834238Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 5, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 5, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:46.834390Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToAgent(TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 5, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.834749Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 5, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 5, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:46.838165Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(Close(TcpClose { connection_id: 5 }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:46.838360Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(Close(TcpClose { connection_id: 5 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(Close(TcpClose { connection_id: 5 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:47.040413Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 6, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:38938, destination: 127.0.0.1:80 }, transport: Tcp })))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:47.040814Z","level":"INFO","fields":{"message":"Received an HTTP request from the agent","full_headers":"{\"host\": \"127.0.0.1:33621\", \"user-agent\": \"curl/8.5.0\", \"accept\": \"*/*\", \"x-user\": \"me\"}","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":199,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 6, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:38938, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:47.041041Z","level":"DEBUG","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":187,"span":{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 6, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:38938, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},{"body_tx":"None","request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }","transport":"Tcp","name":"start_http_gateway"}]}
{"timestamp":"2025-02-28T13:15:47.041164Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 6, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:38938, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(HttpRequestChunked(StartV2(ChunkedRequestStartV2 { connection_id: 6, request_id: 0, request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: InternalHttpBodyNew { frames: [], is_last: true } }, metadata: V1 { source: 10.244.0.1:38938, destination: 127.0.0.1:80 }, transport: Tcp })))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:47.041292Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":1},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:47.041426Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59528, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":162,"span":{"name":"wait_for_ready"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"wait_for_ready"}]}
{"timestamp":"2025-02-28T13:15:47.041520Z","level":"DEBUG","fields":{"message":"Reused an idle client","ready":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59528, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":127,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:47.041606Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59528, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:47.041756Z","level":"TRACE","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59528, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59528, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:47.041867Z","level":"WARN","fields":{"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":215,"span":{"name":"send_attempt"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"}]}
{"timestamp":"2025-02-28T13:15:47.041931Z","level":"TRACE","fields":{"message":"Trying again after backoff","backoff_ms":"50","failed_attempts":1,"error":"failed to send the request to the local application's HTTP server: `channel closed`, sources=[]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":351,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:47.093361Z","level":"DEBUG","fields":{"message":"Starting send attempt","attempt":2},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":334,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:47.094074Z","level":"TRACE","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59542, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":192,"span":{"name":"make_client"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},{"name":"make_client"}]}
{"timestamp":"2025-02-28T13:15:47.094257Z","level":"DEBUG","fields":{"message":"Made a new client","client":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59542, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":141,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:47.094415Z","level":"DEBUG","fields":{"return":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59542, is_http_1: true, uses_tls: false }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":108,"span":{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request_uri":"/","server_addr":"0.0.0.0:46635","transport":"Tcp","version":"HTTP/1.1","name":"get"}]}
{"timestamp":"2025-02-28T13:15:47.095020Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 11, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59542 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:47.095252Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"LayerRequest(11, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59542 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(11, LayerId(0), ConnMetadata(ConnMetadataRequest { listener_address: 0.0.0.0:46635, peer_address: 127.0.0.1:59542 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:47.095428Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToLayer(ToLayer { message_id: 11, layer_id: LayerId(0), message: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59542, local_address: 0.0.0.0 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:47.095645Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":39,"span":{"msg":"LocalMessage { message_id: 11, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59542, local_address: 0.0.0.0 })) }","name":"send_and_flush"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},{"msg":"LocalMessage { message_id: 11, inner: Incoming(ConnMetadata(ConnMetadataResponse { remote_source: 127.0.0.1:59542, local_address: 0.0.0.0 })) }","name":"send_and_flush"}]}
{"timestamp":"2025-02-28T13:15:47.097699Z","level":"TRACE","fields":{"message":"HTTP connection with the local application finished"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":235}
{"timestamp":"2025-02-28T13:15:47.097825Z","level":"TRACE","fields":{"return":"Response { status: 200, version: HTTP/1.1, headers: {\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:47 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}, body: Body(Streaming) }"},"target":"mirrord_intproxy::proxies::incoming::http","filename":"mirrord/intproxy/src/proxies/incoming/http.rs","line_number":47,"span":{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59542, is_http_1: true, uses_tls: false }","name":"send_request"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"request":"HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }","self":"LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59542, is_http_1: true, uses_tls: false }","name":"send_request"}]}
{"timestamp":"2025-02-28T13:15:47.098078Z","level":"DEBUG","fields":{"message":"All response body frames were instantly ready, sending full response","ready_frames":"[Data(3 (length))]"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":104,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:47.098176Z","level":"DEBUG","fields":{"return":"Continue(())"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":85,"span":{"name":"handle_response_chunked"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},{"name":"send_attempt"},{"name":"handle_response_chunked"}]}
{"timestamp":"2025-02-28T13:15:47.098296Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming::http_gateway","filename":"mirrord/intproxy/src/proxies/incoming/http_gateway.rs","line_number":317,"span":{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"},"spans":[{"self":"HttpGatewayTask { request: HttpRequest { internal_request: InternalHttpRequest { method: GET, uri: /, headers: 4, version: HTTP/1.1, body: StreamingBody { idx: 0, frame_rx_closed: true, cached_frames: [] } }, connection_id: 6, request_id: 0, port: 80 }, response_mode: Chunked, server_addr: 0.0.0.0:46635, transport: Tcp }","name":"http_gateway_task_main_loop"}]}
{"timestamp":"2025-02-28T13:15:47.098497Z","level":"INFO","fields":{"message":"Received an HTTP response from an HttpGatewayTask","full_headers":"{\"server\": \"Werkzeug/3.1.3 Python/3.12.3\", \"date\": \"Fri, 28 Feb 2025 13:15:47 GMT\", \"content-type\": \"text/html; charset=utf-8\", \"content-length\": \"3\", \"connection\": \"close\"}","response":"HttpResponse { port: 80, connection_id: 6, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":785,"span":{"id":"HttpGatewayId { connection_id: 6, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 6, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 6, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 6, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:47.098630Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 6, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 6, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 6, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Message(Http(ResponseFramed(HttpResponse { port: 80, connection_id: 6, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } })))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:47.098787Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":715,"span":{"id":"HttpGatewayId { connection_id: 6, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"},"spans":[{"name":"incoming_proxy_main_loop"},{"id":"HttpGatewayId { connection_id: 6, request_id: 0, port: 80, version: HTTP/1.1 }","update":"Finished(Ok(()))","name":"handle_http_gateway_update"}]}
{"timestamp":"2025-02-28T13:15:47.098942Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToAgent(TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 6, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:47.099076Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 6, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"TcpSteal(HttpResponseFramed(HttpResponse { port: 80, connection_id: 6, request_id: 0, internal_response: InternalHttpResponse { status: 200, version: HTTP/1.1, headers: 5, body: InternalHttpBody([Data(3 (length))]) } }))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:47.102184Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"AGENT_CONNECTION","task_update":"Message(FromAgent(TcpSteal(Close(TcpClose { connection_id: 6 }))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:47.102389Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"AgentSteal(Close(TcpClose { connection_id: 6 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"AgentSteal(Close(TcpClose { connection_id: 6 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:50.099921Z","level":"TRACE","fields":{"message":"Dropping an idle client","client":"IdleLocalClient { client: LocalHttpClient { local_server_address: 0.0.0.0:46635, address: 127.0.0.1:59542, is_http_1: true, uses_tls: false }, idle_for_s: 3.0017152 }"},"target":"mirrord_intproxy::proxies::incoming::http::client_store","filename":"mirrord/intproxy/src/proxies/incoming/http/client_store.rs","line_number":286}
{"timestamp":"2025-02-28T13:15:50.499512Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Message(FromLayer(FromLayer { message_id: 12, layer_id: LayerId(0), message: Incoming(PortUnsubscribe(PortUnsubscribe { port: 80, listening_on: 0.0.0.0:46635 })) }))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:50.499935Z","level":"TRACE","fields":{"return":"true"},"target":"mirrord_intproxy::remote_resources","filename":"mirrord/intproxy/src/remote_resources.rs","line_number":34,"span":{"layer_id":"LayerId(0)","name":"remove"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(12, LayerId(0), PortUnsubscribe(PortUnsubscribe { port: 80, listening_on: 0.0.0.0:46635 }))","name":"handle_message"},{"layer_id":"LayerId(0)","request":"PortUnsubscribe { port: 80, listening_on: 0.0.0.0:46635 }","name":"layer_unsubscribed"},{"layer_id":"LayerId(0)","name":"remove"}]}
{"timestamp":"2025-02-28T13:15:50.500083Z","level":"INFO","fields":{"return":"Some(TcpSteal(PortUnsubscribe(80)))"},"target":"mirrord_intproxy::proxies::incoming::subscriptions","filename":"mirrord/intproxy/src/proxies/incoming/subscriptions.rs","line_number":214,"span":{"layer_id":"LayerId(0)","request":"PortUnsubscribe { port: 80, listening_on: 0.0.0.0:46635 }","name":"layer_unsubscribed"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(12, LayerId(0), PortUnsubscribe(PortUnsubscribe { port: 80, listening_on: 0.0.0.0:46635 }))","name":"handle_message"},{"layer_id":"LayerId(0)","request":"PortUnsubscribe { port: 80, listening_on: 0.0.0.0:46635 }","name":"layer_unsubscribed"}]}
{"timestamp":"2025-02-28T13:15:50.500191Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"LayerRequest(12, LayerId(0), PortUnsubscribe(PortUnsubscribe { port: 80, listening_on: 0.0.0.0:46635 }))","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerRequest(12, LayerId(0), PortUnsubscribe(PortUnsubscribe { port: 80, listening_on: 0.0.0.0:46635 }))","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:50.500318Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"INCOMING_PROXY","task_update":"Message(ToAgent(TcpSteal(PortUnsubscribe(80))))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:50.500472Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":233,"span":{"msg":"TcpSteal(PortUnsubscribe(80))","name":"send_message_to_agent"},"spans":[{"name":"agent_connection_main_loop"},{"msg":"TcpSteal(PortUnsubscribe(80))","name":"send_message_to_agent"}]}
{"timestamp":"2025-02-28T13:15:50.537515Z","level":"DEBUG","fields":{"message":"Layer closed connection, exiting"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":67,"span":{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"}]}
{"timestamp":"2025-02-28T13:15:50.537660Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::layer_conn","filename":"mirrord/intproxy/src/layer_conn.rs","line_number":54,"span":{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"},"spans":[{"layer_id":"LayerId(0)","name":"layer_connection_main_loop"}]}
{"timestamp":"2025-02-28T13:15:50.537971Z","level":"TRACE","fields":{"message":"Received a task update","task_id":"LAYER_CONNECTION_0","task_update":"Finished(Ok(()))"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":167,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:50.538040Z","level":"TRACE","fields":{"message":"Layer connection closed","layer_id":0},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":277,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:50.538438Z","level":"TRACE","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":573,"span":{"message":"LayerClosed(LayerClosed { id: LayerId(0) })","name":"handle_message"},"spans":[{"name":"incoming_proxy_main_loop"},{"message":"LayerClosed(LayerClosed { id: LayerId(0) })","name":"handle_message"}]}
{"timestamp":"2025-02-28T13:15:55.539819Z","level":"INFO","fields":{"message":"Reached the timeout on no active layer connections"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":181,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:55.539999Z","level":"INFO","fields":{"message":"Collecting background task results before exiting"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":189,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:55.540130Z","level":"DEBUG","fields":{"message":"Message bus closed, exiting"},"target":"mirrord_intproxy::layer_initializer","filename":"mirrord/intproxy/src/layer_initializer.rs","line_number":104,"span":{"name":"layer_initializer_main_loop"},"spans":[{"name":"layer_initializer_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540166Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::layer_initializer","filename":"mirrord/intproxy/src/layer_initializer.rs","line_number":99,"span":{"name":"layer_initializer_main_loop"},"spans":[{"name":"layer_initializer_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540317Z","level":"TRACE","fields":{"message":"message bus closed, exiting"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":264,"span":{"name":"agent_connection_main_loop"},"spans":[{"name":"agent_connection_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540352Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::agent_conn","filename":"mirrord/intproxy/src/agent_conn.rs","line_number":258,"span":{"name":"agent_connection_main_loop"},"spans":[{"name":"agent_connection_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540454Z","level":"DEBUG","fields":{"message":"Message bus closed, exiting"},"target":"mirrord_intproxy::proxies::simple","filename":"mirrord/intproxy/src/proxies/simple.rs","line_number":203,"span":{"name":"simple_proxy_main_loop"},"spans":[{"name":"simple_proxy_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540488Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::simple","filename":"mirrord/intproxy/src/proxies/simple.rs","line_number":140,"span":{"name":"simple_proxy_main_loop"},"spans":[{"name":"simple_proxy_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540562Z","level":"DEBUG","fields":{"message":"Message bus closed, exiting"},"target":"mirrord_intproxy::proxies::outgoing","filename":"mirrord/intproxy/src/proxies/outgoing.rs","line_number":294,"span":{"name":"outgoing_proxy_main_loop"},"spans":[{"name":"outgoing_proxy_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540595Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::outgoing","filename":"mirrord/intproxy/src/proxies/outgoing.rs","line_number":288,"span":{"name":"outgoing_proxy_main_loop"},"spans":[{"name":"outgoing_proxy_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540662Z","level":"DEBUG","fields":{"message":"Message bus closed, exiting"},"target":"mirrord_intproxy::proxies::incoming","filename":"mirrord/intproxy/src/proxies/incoming.rs","line_number":845,"span":{"name":"incoming_proxy_main_loop"},"spans":[{"name":"incoming_proxy_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540743Z","level":"DEBUG","fields":{"message":"Message bus closed, exiting"},"target":"mirrord_intproxy::ping_pong","filename":"mirrord/intproxy/src/ping_pong.rs","line_number":93,"span":{"name":"ping_pong_main_loop"},"spans":[{"name":"ping_pong_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540775Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::ping_pong","filename":"mirrord/intproxy/src/ping_pong.rs","line_number":77,"span":{"name":"ping_pong_main_loop"},"spans":[{"name":"ping_pong_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540855Z","level":"DEBUG","fields":{"message":"Message bus closed, exiting"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":1156,"span":{"name":"files_proxy_main_loop"},"spans":[{"name":"files_proxy_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540888Z","level":"INFO","fields":{"return":"()"},"target":"mirrord_intproxy::proxies::files","filename":"mirrord/intproxy/src/proxies/files.rs","line_number":1124,"span":{"name":"files_proxy_main_loop"},"spans":[{"name":"files_proxy_main_loop"}]}
{"timestamp":"2025-02-28T13:15:55.540965Z","level":"TRACE","fields":{"message":"No more client messages, disconnecting"},"target":"mirrord_kube::api","filename":"mirrord/kube/src/api.rs","line_number":42,"span":{"name":"mirrord_protocol_connection_wrapper_task"},"spans":[{"name":"proxy"},{"connect_info":"Some(DirectKubernetes(AgentKubernetesConnectInfo { pod_name: \"mirrord-agent-1sz7br2oww-t2djq\", pod_namespace: \"default\", agent_port: 50632 }))","name":"connect_and_ping"},{"connect_info":"Some(DirectKubernetes(AgentKubernetesConnectInfo { pod_name: \"mirrord-agent-1sz7br2oww-t2djq\", pod_namespace: \"default\", agent_port: 50632 }))","name":"new"},{"name":"mirrord_protocol_connection_wrapper_task"}]}
{"timestamp":"2025-02-28T13:15:55.541425Z","level":"INFO","fields":{"message":"closed copy_bidirectional agent stream to local sink","connect_info":"AgentKubernetesConnectInfo { pod_name: \"mirrord-agent-1sz7br2oww-t2djq\", pod_namespace: \"default\", agent_port: 50632 }"},"target":"mirrord_kube::api::kubernetes::portforwarder","filename":"mirrord/kube/src/api/kubernetes/portforwarder.rs","line_number":202}
{"timestamp":"2025-02-28T13:15:55.541706Z","level":"TRACE","fields":{"message":"Collected a background task result","task_id":"AGENT_CONNECTION","result":"Ok(())"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":193,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:55.541766Z","level":"TRACE","fields":{"message":"Collected a background task result","task_id":"FILES_PROXY","result":"Ok(())"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":193,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:55.541799Z","level":"TRACE","fields":{"message":"Collected a background task result","task_id":"LAYER_INITIALIZER","result":"Ok(())"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":193,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:55.541830Z","level":"TRACE","fields":{"message":"Collected a background task result","task_id":"INCOMING_PROXY","result":"Ok(())"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":193,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:55.541861Z","level":"TRACE","fields":{"message":"Collected a background task result","task_id":"OUTGOING_PROXY","result":"Ok(())"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":193,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:55.541891Z","level":"TRACE","fields":{"message":"Collected a background task result","task_id":"PING_PONG","result":"Ok(())"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":193,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
{"timestamp":"2025-02-28T13:15:55.541921Z","level":"TRACE","fields":{"message":"Collected a background task result","task_id":"SIMPLE_PROXY","result":"Ok(())"},"target":"mirrord_intproxy","filename":"mirrord/intproxy/src/lib.rs","line_number":193,"span":{"name":"proxy"},"spans":[{"name":"proxy"}]}
