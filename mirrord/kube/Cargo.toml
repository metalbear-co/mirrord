[package]
name = "mirrord-kube"
version.workspace = true
authors.workspace = true
description.workspace = true
documentation.workspace = true
readme.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
keywords.workspace = true
categories.workspace = true
publish.workspace = true
edition.workspace = true

[lints]
workspace = true

[features]
default = []
# Enables connecting to the agent pod with plain TCP.
incluster = []
# Enables connecting to the agent pod with kube's portforwarder.
portforward = [
    "dep:tokio-retry"
]
# re-export kube. Useful for consumers of this library, as we use
# types from kube in our public API, therefore the versions must
# match. So callers can use `mirrord_kube::kube` instead of kube
# directly, to make sure they use the same kube version.
re-export-kube = []

# expose kube's features under the same names.
# users of this library that use the re-exported kube can enable kube's features
# by setting those features when declaring this library as a dependency.
admission = ["kube/admission"]
aws-lc-rs = ["kube/aws-lc-rs"]
client = ["kube/client"]
config = ["kube/config"]
derive = ["kube/derive"]
gzip = ["kube/gzip"]
http-proxy = ["kube/http-proxy"]
jsonpatch = ["kube/jsonpatch"]
kubelet-debug = ["kube/kubelet-debug"]
oauth = ["kube/oauth"]
oidc = ["kube/oidc"]
openssl-tls = ["kube/openssl-tls"]
ring = ["kube/ring"]
runtime = ["kube/runtime"]
rustls-tls = ["kube/rustls-tls"]
socks5 = ["kube/socks5"]
unstable-client = ["kube/unstable-client"]
unstable-runtime = ["kube/unstable-runtime"]
webpki-roots = ["kube/webpki-roots"]
ws = ["kube/ws"]

[dependencies]
mirrord-agent-env = { path = "../agent/env", features = ["k8s-openapi"] }
mirrord-config = { path = "../config" }
mirrord-progress = { path = "../progress" }
mirrord-protocol = { path = "../protocol" }

actix-codec.workspace = true
async-stream = "0.3"
futures.workspace = true
k8s-openapi.workspace = true
kube.workspace = true
rand.workspace = true
regex.workspace = true
serde.workspace = true
serde_json.workspace = true
shellexpand = "3"
thiserror.workspace = true
tokio.workspace = true
tracing.workspace = true
tokio-retry = { workspace = true, optional = true }

[dev-dependencies]
rstest.workspace = true
