[package]
name = "mirrord"
version.workspace = true
authors.workspace = true
description.workspace = true
documentation.workspace = true
readme.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
keywords.workspace = true
categories.workspace = true
publish.workspace = true
edition.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
mirrord-auth = { path = "../auth" }
mirrord-operator = { path = "../operator", features = ["client", "license-fetch", "setup"] }
mirrord-progress = { path = "../progress" }
mirrord-kube = { path = "../kube" }
mirrord-config = { path = "../config" }
mirrord-protocol = { path = "../protocol" }
mirrord-console = { path = "../console" }
mirrord-analytics = { path = "../analytics" }

actix-codec.workspace = true
clap.workspace = true
tracing.workspace = true
rand.workspace = true
serde_json.workspace = true
serde.workspace = true
tracing-subscriber.workspace = true
futures.workspace = true
which.workspace = true
semver.workspace = true
regex = "1.6.0"
exec.workspace = true
anyhow.workspace = true
reqwest.workspace = true
const-random = "0.1.15"
tokio = { workspace = true, features = ["rt", "rt-multi-thread", "net", "macros", "process"]}
kube.workspace = true
k8s-openapi.workspace = true
miette = { version = "5", features = ["fancy"] }
thiserror.workspace = true
prettytable-rs = "0.10"
humantime = "2"
nix.workspace = true
email_address = "0.2"

[target.'cfg(target_os = "macos")'.dependencies]
mirrord-sip = { path = "../sip" }


[build-dependencies]
mirrord-layer = { artifact = "cdylib", path="../layer" }
